version: "3"

services:
  apisix:
    build:
      context: ./..
      dockerfile: centos/Dockerfile
    restart: always
    volumes:
      - ./apisix_log:/usr/local/apisix/logs
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ##network_mode: host
    ports:
      - "9080:9080/tcp"
      - "9443:9443/tcp"
    networks:
      apisix:
        ipv4_address: 172.18.5.11

  etcd:
    # if you are in the mainland China, please use Azure China mirror:
    # image: gcr.azk8s.cn/etcd-development/etcd:v3.3.12
    image: gcr.io/etcd-development/etcd:v3.3.12
    command: /usr/local/bin/etcd --advertise-client-urls http://0.0.0.0:2379 --listen-client-urls http://0.0.0.0:2379
    restart: always
    volumes:
      - ./etcd_data:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
    ports:
      - "2379:2379/tcp"
    networks:
      apisix:
        ipv4_address: 172.18.5.10

  web1:
    image: ruby:2-alpine
    command: sh -c "mkdir -p /tmp/www && echo 'web1' > /tmp/www/web1.txt && ruby -run -ehttpd /tmp/www -p8000"
    restart: always
    ports:
      - "9081:8000/tcp"
    networks:
      apisix:
        ipv4_address: 172.18.5.12

  web2:
    image: ruby:2-alpine
    command: sh -c "mkdir -p /tmp/www && echo 'web2' > /tmp/www/web2.txt && ruby -run -ehttpd /tmp/www -p8000"
    restart: always
    ports:
      - "9082:8000/tcp"
    networks:
      apisix:
        ipv4_address: 172.18.5.13

networks:
  apisix:
    driver: bridge
    ipam:
      config:
      - subnet: 172.18.0.0/16
